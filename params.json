{
  "name": "ng-eternicode-datepicker",
  "tagline": "This is an angular wrapper for the awesome bootstrap-datepicker by @eternicode",
  "body": "# ng-eternicode-datepicker\r\nAngularJS wrapper for the awesome [bootstrap-datepicker](https://github.com/eternicode/bootstrap-datepicker) by [@eternicode](https://github.com/eternicode).\r\n\r\n## Installation\r\n**bower**\r\n````\r\nbower install ng-eternicode-datepicker --save\r\n````\r\n\r\n**npm**\r\n````\r\nnpm install ng-eternicode-datepicker --save\r\n````\r\n\r\n**Other**  \r\nDownload file `dist/ng-eternicode-datepicker.min.js`\r\n\r\n### Include files\r\nThe original `bootstrap-datepicker` files have to be included first. These files are required:\r\n```html\r\n<link rel=\"stylesheet\" href=\"bower_components/bootstrap/dist/css/bootstrap.min.css\">\r\n<link rel=\"stylesheet\" href=\"bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker3.min.css\">\r\n\r\n<script src=\"bower_components/jquery/dist/jquery.min.js\"></script>\r\n<script src=\"bower_components/angular/angular.min.js\"></script>\r\n<script src=\"bower_components/bootstrap/dist/js/bootstrap.min.js\"></script>\r\n<script src=\"bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js\"></script>\r\n<script src=\"bower_components/ng-eternicode-datepicker/dist/ng-eternicode-datepicker.js\"></script>\r\n```\r\nIf you want to use a different language remember to include the appropriate bootstrap-datepicker language file. For example:\r\n```html\r\n<script src=\"bower_components/bootstrap-datepicker/dist/locales/bootstrap-datepicker.de.min.js\"></script>\r\n```\r\n\r\n## Usage\r\nRemember to add the module `fk.eternicode-datepicker` as a dependency to your angular module:\r\n```js\r\nangular.module('yourApp', ['fk.eternicode-datepicker']);\r\n```\r\n\r\n### Text input\r\n```html\r\n<div datepicker ng-model=\"dateInput\">\r\n  <input type=\"text\" class=\"form-control\">\r\n</div>\r\n```\r\n**!! ATTENTION !!**  \r\nYou can't apply `datepicker` and `ng-model` directly to an input field.  \r\nAs the `bootstrap-datepicker` changes the value of the input field, this would mess around with our model.\r\n\r\n### Component\r\n```html\r\n<div class=\"input-group date\" datepicker ng-model='dateComponent'>\r\n  <input type=\"text\" class=\"form-control\">\r\n  <span class=\"input-group-addon\">\r\n    <i class=\"glyphicon glyphicon-th\"></i>\r\n  </span>\r\n</div>\r\n```\r\n\r\n### Embedded / Inline\r\n```html\r\n<div datepicker ng-model='dateEmbedded'></div>\r\n```\r\n\r\n### Range\r\n*Currently not supported*.\r\n\r\n## Options\r\nToo pass additional datepicker options use the `dp-options` attribute:\r\n```html\r\n<div datepicker ng-model=\"dateInput\" dp-options=\"datepickerOptions\">\r\n  <!-- dp-options not ng-options! -->\r\n  <input type=\"text\" class=\"form-control\">\r\n</div>\r\n```\r\n```js\r\n// Inside your controller\r\n$scope.datepickerOptions = {\r\n  autoclose: true\r\n};\r\n```\r\n\r\nPlease refer to the [bootstrap-datepicker docs](https://bootstrap-datepicker.readthedocs.io/en/latest/options.html) to learn more about supported options.\r\n\r\n### datepickerDefaultsProvider\r\nMany options will be the same for every datepicker in your app. At least the language and date format should be consinstent. For this reason you could set default options which are used for every datepicker with the `datepickerDefaultsProvider`.\r\n```js\r\nangular.module('yourApp')\r\n  .config(['datepickerDefaultsProvider', function (datepickerDefaultsProvider) {\r\n    datepickerDefaultsProvider.setDefaultOptions({\r\n      language: 'de',\r\n      format: 'dd.mm.yyyy',\r\n      assumeNearbyYear: true,\r\n      autoclose: true,\r\n      todayHighlight: true\r\n    });\r\n  });\r\n```\r\nOf course you could override or extend your defaults with the `dp-options` attribute.\r\n\r\n## License\r\nMIT\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}